version: 2.0
references:
  triggerable-by-tag: &triggerable-by-tag
    # For a tag push unaffected by any filters, CircleCI skips the job
    # https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
    filters:
      tags:
        only: /.*/


  nodejs: &nodejs
    docker:
      - image: circleci/node:12.16.3
  browsers: &browsers
    docker:
      - image: circleci/node:12.16.3-browsers

  node14: &node14
    docker:
      - image: circleci/node:14.2.0
  node13: &node13
    docker:
      - image: circleci/node:13.14.0
  node10: &node10
    docker:
      - image: circleci/node:10.20.1
  node6: &node6
    docker:
      - image: circleci/node:6.13.0

  workspace: &workspace
    attach_workspace:
      at: ~/project
  persist: &persist
    persist_to_workspace:
      root: .
      paths:
        - .

  rebuild_test: &rebuild_test
    steps:
      - *workspace
      - run: npm rebuild
      - run: FETCH_MOCK_SRC=../cjs/server.js make test


jobs:
  checkout_code:
    <<: *nodejs
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: if [ ! -d "node_modules" ]; then npm install --no-package-lock; fi
      - save_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - *persist

  build:
    <<: *nodejs
    steps:
      - *workspace
      - run: make build
      - *persist
  lint:
    <<: *nodejs
    steps:
      - *workspace
      - run: make lint-ci

  typecheck:
    <<: *nodejs
    steps:
      - *workspace
      - run: make typecheck

  test:
    <<: *nodejs
    steps:
      - *workspace
      - run: make coverage


  nodefetch2:
    <<: *nodejs
    steps:
      - *workspace
      - run: FETCH_MOCK_SRC=../cjs/server.js make test

  nodefetch1:
    <<: *nodejs
    steps:
      - *workspace
      - run: npm install node-fetch@1
      - run: FETCH_MOCK_SRC=../cjs/server.js make test

  es5:
    <<: *node6
    steps:
      - *workspace
      - run: npm rebuild
      - run: FETCH_MOCK_SRC=../es5/server.js make test-es5

  esm:
    <<: *node14
    steps:
      - *workspace
      - run: npm rebuild
      - run: FETCH_MOCK_SRC=../esm/server.js mocha test/server.mjs

  node10:
    <<: *node10
    <<: *rebuild_test
  node13:
    <<: *node13
    <<: *rebuild_test

  node14:
    <<: *node14
    <<: *rebuild_test

  chrome:
    <<: *browsers
    steps:
      - *workspace
      - run: TEST_BROWSER=Chrome make test-browser

  firefox:
    <<: *browsers
    steps:
      - *workspace
      - run: npm install karma-firefox-launcher
      - run: TEST_BROWSER=Firefox make test-browser


  deploy:
    <<: *nodejs
    steps:
      - *workspace
      - run: make publish


workflows:
  version: 2
  fetch-mock-ci-cd:
    jobs:
      - checkout_code: *triggerable-by-tag
      - test:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - typecheck:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - lint:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - build:
          <<: *triggerable-by-tag
          requires:
            - lint
            - test
      - nodefetch1:
          <<: *triggerable-by-tag
          requires:
            - build
      - nodefetch2:
          <<: *triggerable-by-tag
          requires:
            - build
      - es5:
          <<: *triggerable-by-tag
          requires:
            - build
      - esm:
          <<: *triggerable-by-tag
          requires:
            - build
      - node10:
          <<: *triggerable-by-tag
          requires:
            - build
      - node13:
          <<: *triggerable-by-tag
          requires:
            - build
      - node14:
          <<: *triggerable-by-tag
          requires:
            - build
      - chrome:
          <<: *triggerable-by-tag
          requires:
            - build
      - firefox:
          <<: *triggerable-by-tag
          requires:
            - build
      - deploy:
          context: wheresrhys-npm-publish
          requires:
            - nodefetch1
            - nodefetch2
            - es5
            - chrome
            - firefox
            - build
            - typecheck
            - node10
            - node13
            - node14
            - esm
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+(?:-(beta|alpha)\.\d+)?$/
