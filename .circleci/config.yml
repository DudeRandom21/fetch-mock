version: 2.0
references:
  triggerable-by-tag: &triggerable-by-tag
    # For a tag push unaffected by any filters, CircleCI skips the job
    # https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
    filters:
      tags:
        only: /.*/
  env: &env
    docker:
      - image: circleci/node:10.20.1
  env-browsers: &env-browsers
    docker:
      - image: circleci/node:10.20.1-browsers

jobs:
  checkout_code:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: if [ ! -d "node_modules" ]; then npm install --no-package-lock; fi
      - save_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  lint:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: make lint-ci

  typecheck:
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: make typecheck

  test:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: make coverage-report


  nodefetch2:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: FETCH_MOCK_SRC=./cjs/server.js make test-unit

  nodefetch1:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: npm install node-fetch@1
      - run: FETCH_MOCK_SRC=./cjs/server.js make test-unit

  node6:
    docker:
      - image: circleci/node:6.13.0
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: npm rebuild
      - run: make test-node6

  chrome:
    <<: *env-browsers
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: make test-chrome

  firefox:
    <<: *env-browsers
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: npm install karma-firefox-launcher
      - run: make test-firefox

  build:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: make build

  deploy:
    <<: *env
    steps:
      - checkout
      - restore_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
      - run: 'echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ${HOME}/.npmrc'
      - run: make publish


workflows:
  version: 2
  fetch-mock-ci-cd:
    jobs:
      - checkout_code: *triggerable-by-tag
      - test:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - nodefetch1:
          <<: *triggerable-by-tag
          requires:
            - build
      - nodefetch2:
          <<: *triggerable-by-tag
          requires:
            - build
      - node6:
          <<: *triggerable-by-tag
          requires:
            - build
      - chrome:
          <<: *triggerable-by-tag
          requires:
            - build
# firefox version too old for sw, so postpone cross browser tests till updated in circleci
#      - firefox:
#          requires:
#            - checkout_code
      - typecheck:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - lint:
          <<: *triggerable-by-tag
          requires:
            - checkout_code
      - build:
          <<: *triggerable-by-tag
          requires:
            - lint
            - test
      - deploy:
          context: wheresrhys-npm-publish
          requires:
            - nodefetch1
            - nodefetch2
            - node6
            - chrome
           # - firefox
            - build
            - typecheck
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v?\d+\.\d+\.\d+(?:-(beta|alpha)\.\d+)?$/
